// Package mandatory_one Code generated by swaggo/swag. DO NOT EDIT
package mandatory_one

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Pages"
                ],
                "summary": "get index-page",
                "responses": {
                    "200": {
                        "description": "HTML page"
                    }
                }
            }
        },
        "/about": {
            "get": {
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Pages"
                ],
                "summary": "get about-page",
                "responses": {
                    "200": {
                        "description": "HTML page"
                    }
                }
            }
        },
        "/login": {
            "get": {
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Pages"
                ],
                "summary": "getting login-page",
                "responses": {
                    "200": {
                        "description": "HTML page"
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API"
                ],
                "summary": "Login existing user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API"
                ],
                "summary": "Logout the current user",
                "responses": {
                    "200": {
                        "description": "Logout confirmation",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/register": {
            "get": {
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Pages"
                ],
                "summary": "getting register-page",
                "responses": {
                    "200": {
                        "description": "HTML page"
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API"
                ],
                "summary": "Create new user",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API"
                ],
                "summary": "Search after pages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "search word",
                        "name": "q",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "(default=en)",
                        "name": "language",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/session": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "API"
                ],
                "summary": "checking the users session",
                "responses": {
                    "200": {
                        "description": "Status for login",
                        "schema": {
                            "$ref": "#/definitions/main.SessionResponse"
                        }
                    }
                }
            }
        },
        "/weather": {
            "get": {
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "Pages"
                ],
                "summary": "get weather-page",
                "responses": {
                    "200": {
                        "description": "HTML page"
                    }
                }
            }
        }
    },
    "definitions": {
        "main.RegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "supersecret"
                },
                "password2": {
                    "type": "string",
                    "example": "supersecret"
                },
                "username": {
                    "type": "string",
                    "example": "testuser"
                }
            }
        },
        "main.SessionResponse": {
            "type": "object",
            "properties": {
                "logged_in": {
                    "type": "boolean",
                    "example": true
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "68.221.201.252:8080",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "WHOKNOWS_VARIATIONS - 5-uptime-gang - API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
